# Generated by Django 5.2.7 on 2025-10-01 19:57

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.UUIDField(unique=True)),
                ("national_id", models.CharField(max_length=20, unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("U", "No especificado"),
                        ],
                        default="U",
                        max_length=1,
                    ),
                ),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.TextField(blank=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=200),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=100),
                ),
                ("insurance_provider", models.CharField(blank=True, max_length=255)),
                ("insurance_number", models.CharField(blank=True, max_length=100)),
                ("insurance_type", models.CharField(blank=True, max_length=100)),
                ("insurance_expiry", models.DateField(blank=True, null=True)),
                (
                    "blood_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        max_length=5,
                    ),
                ),
                ("allergies", models.TextField(blank=True)),
                ("chronic_conditions", models.TextField(blank=True)),
                ("current_medications", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "patients",
                "ordering": ["first_name", "last_name"],
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="patients_user_id_fdab75_idx"
                    ),
                    models.Index(
                        fields=["national_id"], name="patients_nationa_c07601_idx"
                    ),
                    models.Index(
                        fields=["first_name", "last_name"],
                        name="patients_first_n_a3acf4_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MedicalRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "record_type",
                    models.CharField(
                        choices=[
                            ("allergy", "Alergia"),
                            ("condition", "Condición Médica"),
                            ("medication", "Medicamento"),
                            ("procedure", "Procedimiento"),
                            ("vaccination", "Vacuna"),
                            ("test_result", "Resultado de Examen"),
                        ],
                        max_length=50,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("diagnosis_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("resolved", "Resuelto"),
                            ("chronic", "Crónico"),
                            ("inactive", "Inactivo"),
                        ],
                        default="active",
                        max_length=50,
                    ),
                ),
                ("severity", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_records",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "medical_records",
                "ordering": ["-diagnosis_date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["patient", "record_type"],
                        name="medical_rec_patient_f0d433_idx",
                    )
                ],
            },
        ),
    ]
